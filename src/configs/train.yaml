defaults:
  - model: hifi_gan
  - writer: wandb
  - metrics: mos
  - datasets: train_dataset
  - dataloader: train_loader
  - transforms: melspec_only_instance
  - _self_
########################################## generator optimizer + sheduler
optimizer_generator:
  _target_: torch.optim.AdamW
  lr: 1e-4
  betas: [0.8, 0.99]
  weight_decay: 0.01

lr_scheduler_generator:
  _target_: torch.optim.lr_scheduler.StepLR
  step_size: ${trainer.epoch_len}
  gamma: 0.999

########################################## discriminator optimizer + sheduler
optimizer_discriminator:
  _target_: torch.optim.AdamW
  lr: 1e-4
  betas: [0.8, 0.99]
  weight_decay: 0.01
  
lr_scheduler_discriminator:
  _target_: torch.optim.lr_scheduler.StepLR
  step_size: ${trainer.epoch_len}
  gamma: 0.999
##########################################
loss_function:
  _target_: src.loss.gan_loss.HiFiGANLoss
  lambda_fm: 2
  lambda_mel: 45

trainer:
  log_step: 50
  n_epochs: 1000
  epoch_len: 200
  max_grad_norm: 10
  device_tensors: ["audio", "melspec"] # which tensors should be on device (ex. GPU)
  from_pretrained: /home/aamatosyan/DLA/neural_vocoder/saved/main_run/model_best.pth # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "max val_MOS" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1
